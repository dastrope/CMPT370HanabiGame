Applicable to the Software Requirement Specification sections: 3.2.1.4 to 3.2.1.7

1. Verify that all clients correctly determine whose turn it is from turn order and JSON interpretation. - Visual confirmation as it requires syncing of multiple clients that don't know about each other.

2. Verify that controller and interaction model are both set to active state for the current active player and that other players are inactive. - Visual confirmation - can also assert and test that way

3. Verify that the view draws the correct buttons to be interactable at the correct times based on model and interaction model updates, ie discard card is available only when a discard action can be taken, inform buttons only active when inform actions can be taken. - Visual confirmation

4. Verify that each action produces the proper changes in the model, ie discard pile is added to when card is discarded or play fails. - Assert that correct method is called when it should be, methods themselves should be tested in Unit Testing

5. Verify that all clients maintain the same hands (excepting things unknown about their own hands, although given info should be maintained as well) and game information like tokens available - Visual confirmation - if the view draws it that should be proof the model contains that info - can also use asserts that fields contain the right values after actions taken

6. Verify that game ends properly as a result of: final fuse going off from failed play, final firework being built, final player taking their last turn when no cards can be drawn.